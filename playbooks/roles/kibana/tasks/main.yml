######################################################
################# Setup Kibana #######################
######################################################
---

- name: "Create config directory"
  file:
    path: "{{ kibana_dir }}"
    state: directory
    owner: root
    group: root
    mode: u+rw,g+rw

- name: Install templates
  template:
    src: "templates/{{ item }}.yml.j2"
    dest: "{{ kibana_dir }}/{{ item }}.yml"
    group: root
    owner: root
    mode: 0644
  with_items:
    - deploy
    - svc

- name: Flush Deployments
<<<<<<< curell-kubernetes
  shell: |
    kubectl --kubeconfig {{ kubernetes_conf_file }} delete -f {{ kibana_dir }}/{{ item }}.yml
    while [ $(kubectl --kubeconfig {{ kubernetes_conf_file }} get -f {{ kibana_dir }}/{{ item }}.yml | tail -n +2 | wc -l) != '0' ]; do
      echo -n .;
      sleep 1;
    done;
=======
  command: 'kubectl --kubeconfig="{{ kubernetes_conf_file }}" delete -f {{ kibana_dir }}/{{ item }}.yml'
  with_items:
    - kibana-deploy
    - kibana-svc
  ignore_errors: true

- name: Deploy
  command: 'kubectl --kubeconfig="{{ kubernetes_conf_file }}" create -f {{ kibana_dir }}/{{ item }}.yml'
>>>>>>> Implemented GlusterFS
  with_items:
    - deploy
    - svc
  ignore_errors: true

- name: Deploy
  shell: |
    kubectl --kubeconfig {{ kubernetes_conf_file }} create -f {{ kibana_dir }}/deploy.yml
    while [ $(kubectl --kubeconfig {{ kubernetes_conf_file }} get -f {{ kibana_dir }}/deploy.yml | tail -n +2 | awk '{print $5}') == '0' ]; do
      echo -n .;
      sleep 1;
    done;
    kubectl --kubeconfig {{ kubernetes_conf_file }} create -f {{ kibana_dir }}/svc.yml
    while [ $(kubectl --kubeconfig {{ kubernetes_conf_file }} get -f {{ kibana_dir }}/svc.yml | tail -n +2 | awk '{ print $4 }' | grep -E '^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$' | wc -l) == '0' ]; do
      echo -n .;
      sleep 1;
    done;
