apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: moloch
  labels:
    component: moloch
spec:
  replicas: {{ groups['sensors'] | length }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
     component: moloch
  template:
    metadata:
      labels:
        component: moloch
    spec:
      containers:
      - name: "{{ moloch_container_name }}-capture"
        image: "{{ moloch_image}}:{{ moloch_tag }}"
        command:
        - "/bin/bash"
        - "-c"
        - "{{ moloch_data_dir }}/bin/moloch-capture -c {{ moloch_data_dir }}/etc/config.ini >> {{ moloch_logs_dir }}/capture.log >> 2>&1"
        resources: {}
        volumeMounts:
        - mountPath: "{{ moloch_data_dir }}"
          name: {{ moloch_pv_data }}

      - name: "{{ moloch_container_name }}-viewer"
        image: "{{ moloch_image}}:{{ moloch_tag }}"
        command:
        - "/bin/bash"
        - "-c"
        - "{{ moloch_data_dir }}/db/db.pl {{ moloch_elastic_url }} init && {{ moloch_data_dir }}/bin/moloch_add_user.sh {{ moloch_login }} \"Admin User\" {{ moloch_pass }} --admin && {{ moloch_data_dir }}/bin/node {{ moloch_data_dir }}/viewer/viewer.js -c {{ moloch_data_dir }}/etc/config.ini >> {{ moloch_logs_dir }}/capture.log 2>&1"
        resources: {}
        ports:
        - containerPort: {{ moloch_port }}
          name: webgui
        livenessProbe:
          tcpSocket:
            port: webgui
          #httpGet:
          #  host: "{{ moloch_web_url }}"
          #  port: webgui
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - mountPath: "{{ moloch_data_dir }}"
          name: "{{ moloch_pv_data }}"
      restartPolicy: Always

      volumes:
      - name: "{{ moloch_pv_data }}"
        persistentVolumeClaim:
          claimName: "{{ moloch_pv_data }}"
      - name: {{ moloch_config_map }}
        configMap:
          name: {{ moloch_config_map }}

      nodeSelector:
        role: sensor
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: role
                operator: In
                values:
                - sensor
            topologyKey: "kubernetes.io/hostname"
status: {}
